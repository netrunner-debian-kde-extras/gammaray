From: Jakub Adam <jakub.adam@ktknet.cz>
Date: Wed, 16 Jul 2014 15:27:00 +0200
Subject: debian-archs-fix-build

---
 cmake/GammaRayProbeABI.cmake    | 22 ++++++++++++++++++++++
 common/probeabidetector_elf.cpp |  5 +++++
 2 files changed, 27 insertions(+)

diff --git a/cmake/GammaRayProbeABI.cmake b/cmake/GammaRayProbeABI.cmake
index a7415d6..6fc7580 100644
--- a/cmake/GammaRayProbeABI.cmake
+++ b/cmake/GammaRayProbeABI.cmake
@@ -53,10 +53,32 @@ elseif(APPLE)
     set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-${CMAKE_SYSTEM_PROCESSOR}")
   endif()
 
+# kFreeBSD reports i686 as i386 and x86_64 as amd64
+elseif(CMAKE_SYSTEM_NAME MATCHES "kFreeBSD")
+  if (CMAKE_SYSTEM_PROCESSOR MATCHES "i386")
+    set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-i686")
+  elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "amd64")
+    set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-x86_64")
+  else()
+    set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-${CMAKE_SYSTEM_PROCESSOR}")
+  endif()
+
+# Debian GNU/Hurd reports unknown CPU; assume i686
+elseif(CMAKE_SYSTEM_NAME MATCHES "GNU")
+  if (CMAKE_SYSTEM_PROCESSOR MATCHES "unknown")
+    set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-i686")
+  else()
+    set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-${CMAKE_SYSTEM_PROCESSOR}")
+  endif()
+
 else()
   # uname reports different ARM versions, unlike ELF, so map all this to "arm"
   if(CMAKE_SYSTEM_PROCESSOR MATCHES "arm")
     set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-arm")
+  elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL "mips64")
+    set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-mips")
+  elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL "ppc64le")
+    set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-ppc64")
   else()
     set(GAMMARAY_PROBE_ABI "${GAMMARAY_PROBE_ABI}-${CMAKE_SYSTEM_PROCESSOR}")
   endif()
diff --git a/common/probeabidetector_elf.cpp b/common/probeabidetector_elf.cpp
index 03ba082..94f72e4 100644
--- a/common/probeabidetector_elf.cpp
+++ b/common/probeabidetector_elf.cpp
@@ -153,6 +153,11 @@ static QString archFromELFHeader(const uchar *data, quint64 size)
     case EM_X86_64: return "x86_64";
 #endif
     case EM_ARM: return "arm";
+    case EM_MIPS: return "mips";
+    case EM_PPC: return "ppc";
+    case EM_S390: return "s390x";
+    case EM_PPC64: return "ppc64";
+    case EM_AARCH64: return "aarch64";
   }
 
   qWarning() << "Unsupported ELF machine type:" << hdr->e_machine;
